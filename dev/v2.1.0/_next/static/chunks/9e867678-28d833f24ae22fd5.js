"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[93],{2374:function(e,o,t){t.d(o,{$9H:function(){return se_UpdateGroupCommand},$9U:function(){return de_DescribeRiskConfigurationCommand},$C0:function(){return se_UpdateUserAttributesCommand},$G_:function(){return se_DeleteUserPoolCommand},$Il:function(){return se_RespondToAuthChallengeCommand},A6J:function(){return de_TagResourceCommand},AW7:function(){return de_UpdateDeviceStatusCommand},AX5:function(){return de_ConfirmDeviceCommand},Ajt:function(){return se_GetDeviceCommand},B6y:function(){return de_DescribeResourceServerCommand},B7I:function(){return de_AdminSetUserMFAPreferenceCommand},BFS:function(){return se_SetUserPoolMfaConfigCommand},BaU:function(){return se_AdminRespondToAuthChallengeCommand},BsL:function(){return se_DescribeUserImportJobCommand},CFp:function(){return se_GetUserCommand},CHh:function(){return se_UpdateUserPoolClientCommand},CKI:function(){return de_AdminDisableUserCommand},Chp:function(){return de_DeleteUserAttributesCommand},DAk:function(){return de_SetUserPoolMfaConfigCommand},DFI:function(){return de_AdminUserGlobalSignOutCommand},Ddw:function(){return se_CreateUserPoolClientCommand},Dlr:function(){return se_UpdateResourceServerCommand},Dm2:function(){return de_RespondToAuthChallengeCommand},ERR:function(){return de_ListUserPoolsCommand},ESk:function(){return se_DeleteUserPoolClientCommand},EZ4:function(){return se_AdminEnableUserCommand},EgW:function(){return de_DeleteIdentityProviderCommand},Epx:function(){return se_GetUserAttributeVerificationCodeCommand},F7j:function(){return se_VerifySoftwareTokenCommand},FJf:function(){return se_TagResourceCommand},FOl:function(){return se_UpdateDeviceStatusCommand},GW5:function(){return de_ChangePasswordCommand},GmA:function(){return se_ConfirmSignUpCommand},IaG:function(){return se_RevokeTokenCommand},Ii7:function(){return de_AdminEnableUserCommand},Iib:function(){return se_CreateResourceServerCommand},IkP:function(){return se_CreateUserPoolCommand},Ikg:function(){return se_AdminListUserAuthEventsCommand},Ixm:function(){return se_GetUserPoolMfaConfigCommand},Iy0:function(){return se_ConfirmDeviceCommand},J1b:function(){return de_SetRiskConfigurationCommand},J7O:function(){return de_GetSigningCertificateCommand},JTM:function(){return se_AdminDeleteUserCommand},J_c:function(){return se_CreateUserImportJobCommand},Jv0:function(){return se_AdminRemoveUserFromGroupCommand},KoU:function(){return de_DescribeUserPoolClientCommand},L41:function(){return se_GetSigningCertificateCommand},LAF:function(){return de_AdminCreateUserCommand},LIT:function(){return de_DeleteUserPoolClientCommand},LNb:function(){return de_SetUICustomizationCommand},Lbe:function(){return se_ResendConfirmationCodeCommand},Ll8:function(){return se_ConfirmForgotPasswordCommand},Lm_:function(){return de_AdminRespondToAuthChallengeCommand},LxQ:function(){return de_ConfirmSignUpCommand},M$z:function(){return se_InitiateAuthCommand},MUN:function(){return se_AdminSetUserMFAPreferenceCommand},Ms6:function(){return se_GlobalSignOutCommand},N2S:function(){return de_GetIdentityProviderByIdentifierCommand},NDj:function(){return de_GetCSVHeaderCommand},NME:function(){return de_AdminForgetDeviceCommand},NTi:function(){return de_UpdateAuthEventFeedbackCommand},O0u:function(){return se_ListGroupsCommand},OE_:function(){return de_UpdateResourceServerCommand},Oo3:function(){return se_AdminDisableProviderForUserCommand},P1h:function(){return se_ListIdentityProvidersCommand},P48:function(){return de_UpdateUserPoolDomainCommand},PU9:function(){return se_ForgetDeviceCommand},Ptm:function(){return se_AdminUpdateAuthEventFeedbackCommand},Q6_:function(){return se_AdminGetDeviceCommand},QP9:function(){return se_ListUserImportJobsCommand},QV3:function(){return de_DescribeUserPoolDomainCommand},R0C:function(){return se_AdminUserGlobalSignOutCommand},R6e:function(){return se_DeleteIdentityProviderCommand},R7Q:function(){return de_ListUserImportJobsCommand},RIZ:function(){return de_InitiateAuthCommand},S3W:function(){return se_SignUpCommand},Tcw:function(){return de_ForgetDeviceCommand},Utv:function(){return de_AdminListUserAuthEventsCommand},UxU:function(){return se_StopUserImportJobCommand},Vhe:function(){return de_CreateUserImportJobCommand},Vht:function(){return de_StartUserImportJobCommand},Vrg:function(){return de_AdminInitiateAuthCommand},W85:function(){return de_UpdateGroupCommand},WLZ:function(){return se_DescribeUserPoolCommand},WWz:function(){return se_CreateIdentityProviderCommand},WeW:function(){return de_UpdateIdentityProviderCommand},Xqq:function(){return de_VerifyUserAttributeCommand},Y0W:function(){return de_DeleteGroupCommand},YtZ:function(){return se_AdminSetUserPasswordCommand},Z8J:function(){return se_AdminListDevicesCommand},ZFo:function(){return de_GetDeviceCommand},ZH_:function(){return de_DeleteUserPoolDomainCommand},ZRe:function(){return de_AdminDeleteUserCommand},ZYA:function(){return se_SetRiskConfigurationCommand},ZuU:function(){return se_DescribeUserPoolClientCommand},ZyH:function(){return se_ChangePasswordCommand},_4E:function(){return se_AdminDisableUserCommand},_V3:function(){return de_SetUserSettingsCommand},_im:function(){return de_ListUserPoolClientsCommand},_l0:function(){return se_ForgotPasswordCommand},_nT:function(){return de_VerifySoftwareTokenCommand},a7v:function(){return se_UpdateAuthEventFeedbackCommand},ac_:function(){return de_AdminConfirmSignUpCommand},alA:function(){return se_AssociateSoftwareTokenCommand},ay8:function(){return de_ListDevicesCommand},b9G:function(){return se_ListTagsForResourceCommand},bMS:function(){return se_UpdateUserPoolDomainCommand},bvZ:function(){return se_DeleteUserPoolDomainCommand},bvf:function(){return se_AdminConfirmSignUpCommand},cEY:function(){return se_DeleteGroupCommand},cfG:function(){return de_AssociateSoftwareTokenCommand},d1w:function(){return de_SetUserMFAPreferenceCommand},dKY:function(){return de_GetUICustomizationCommand},d_G:function(){return se_CreateUserPoolDomainCommand},e2d:function(){return se_AddCustomAttributesCommand},eD3:function(){return de_ForgotPasswordCommand},ePw:function(){return se_AdminSetUserSettingsCommand},eX4:function(){return de_AdminDisableProviderForUserCommand},eew:function(){return de_AdminGetDeviceCommand},f0w:function(){return de_AdminListDevicesCommand},gnC:function(){return se_DeleteUserAttributesCommand},hq2:function(){return de_StopUserImportJobCommand},i8o:function(){return se_ListDevicesCommand},ii0:function(){return de_AdminDeleteUserAttributesCommand},irH:function(){return de_AddCustomAttributesCommand},j$Y:function(){return de_UpdateUserPoolCommand},j1E:function(){return se_ListUsersInGroupCommand},j1q:function(){return se_AdminResetUserPasswordCommand},j9W:function(){return de_UpdateUserPoolClientCommand},jiN:function(){return se_ListUserPoolsCommand},jqy:function(){return de_CreateUserPoolDomainCommand},k12:function(){return de_CreateIdentityProviderCommand},kD8:function(){return se_CreateGroupCommand},kV1:function(){return de_AdminSetUserPasswordCommand},kWr:function(){return de_ResendConfirmationCodeCommand},kbY:function(){return de_DeleteUserPoolCommand},m$X:function(){return se_StartUserImportJobCommand},m$g:function(){return de_ListTagsForResourceCommand},mOB:function(){return se_UntagResourceCommand},mTH:function(){return se_ListResourceServersCommand},mtm:function(){return de_CreateGroupCommand},nTu:function(){return de_GetUserCommand},nXE:function(){return de_CreateUserPoolCommand},naQ:function(){return de_DescribeUserPoolCommand},nhO:function(){return de_ConfirmForgotPasswordCommand},nnH:function(){return de_DeleteUserCommand},nqI:function(){return de_AdminAddUserToGroupCommand},nsr:function(){return de_UpdateUserAttributesCommand},nxC:function(){return se_DeleteResourceServerCommand},o9z:function(){return de_AdminGetUserCommand},ofX:function(){return de_AdminUpdateUserAttributesCommand},olg:function(){return de_ListUsersCommand},pJ8:function(){return se_AdminForgetDeviceCommand},pfb:function(){return de_AdminUpdateAuthEventFeedbackCommand},pjT:function(){return se_AdminAddUserToGroupCommand},qG9:function(){return de_ListGroupsCommand},qS6:function(){return se_DescribeUserPoolDomainCommand},qSD:function(){return se_DescribeRiskConfigurationCommand},qVo:function(){return se_AdminListGroupsForUserCommand},qeu:function(){return de_AdminRemoveUserFromGroupCommand},r$p:function(){return de_RevokeTokenCommand},rkU:function(){return de_AdminResetUserPasswordCommand},rsy:function(){return se_AdminUpdateDeviceStatusCommand},s71:function(){return de_UntagResourceCommand},sAr:function(){return de_ListIdentityProvidersCommand},seN:function(){return se_DescribeIdentityProviderCommand},si2:function(){return se_VerifyUserAttributeCommand},soj:function(){return se_GetUICustomizationCommand},t2k:function(){return de_AdminUpdateDeviceStatusCommand},tEG:function(){return de_DescribeIdentityProviderCommand},tR1:function(){return se_AdminLinkProviderForUserCommand},tS7:function(){return se_SetUICustomizationCommand},t_T:function(){return se_DeleteUserCommand},tfe:function(){return se_UpdateIdentityProviderCommand},u3X:function(){return se_SetUserMFAPreferenceCommand},uUK:function(){return se_ListUserPoolClientsCommand},uZT:function(){return se_AdminCreateUserCommand},u_y:function(){return se_SetUserSettingsCommand},urA:function(){return de_AdminListGroupsForUserCommand},uzs:function(){return se_ListUsersCommand},vRf:function(){return se_GetGroupCommand},vXJ:function(){return se_AdminUpdateUserAttributesCommand},vlw:function(){return de_SignUpCommand},vqv:function(){return de_GetGroupCommand},w4J:function(){return se_AdminDeleteUserAttributesCommand},wSR:function(){return de_CreateUserPoolClientCommand},wWc:function(){return de_DescribeUserImportJobCommand},wWl:function(){return de_GetUserAttributeVerificationCodeCommand},wdm:function(){return se_AdminInitiateAuthCommand},wjo:function(){return de_CreateResourceServerCommand},xJ:function(){return se_GetCSVHeaderCommand},xJV:function(){return se_UpdateUserPoolCommand},xU8:function(){return de_ListUsersInGroupCommand},xVv:function(){return de_AdminSetUserSettingsCommand},xZ1:function(){return se_DescribeResourceServerCommand},xqR:function(){return de_GlobalSignOutCommand},xsY:function(){return se_AdminGetUserCommand},yfx:function(){return de_AdminLinkProviderForUserCommand},yyL:function(){return de_ListResourceServersCommand},z$B:function(){return se_GetIdentityProviderByIdentifierCommand},zOE:function(){return de_GetUserPoolMfaConfigCommand},zcj:function(){return de_DeleteResourceServerCommand}});var a=t(7970),i=t(2438),n=t(5964),r=t(4666),d=t(1876);let se_AddCustomAttributesCommand=async(e,o)=>{let t=sharedHeaders("AddCustomAttributes");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminAddUserToGroupCommand=async(e,o)=>{let t=sharedHeaders("AdminAddUserToGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminConfirmSignUpCommand=async(e,o)=>{let t=sharedHeaders("AdminConfirmSignUp");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminCreateUserCommand=async(e,o)=>{let t=sharedHeaders("AdminCreateUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminDeleteUserCommand=async(e,o)=>{let t=sharedHeaders("AdminDeleteUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminDeleteUserAttributesCommand=async(e,o)=>{let t=sharedHeaders("AdminDeleteUserAttributes");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminDisableProviderForUserCommand=async(e,o)=>{let t=sharedHeaders("AdminDisableProviderForUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminDisableUserCommand=async(e,o)=>{let t=sharedHeaders("AdminDisableUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminEnableUserCommand=async(e,o)=>{let t=sharedHeaders("AdminEnableUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminForgetDeviceCommand=async(e,o)=>{let t=sharedHeaders("AdminForgetDevice");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminGetDeviceCommand=async(e,o)=>{let t=sharedHeaders("AdminGetDevice");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminGetUserCommand=async(e,o)=>{let t=sharedHeaders("AdminGetUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminInitiateAuthCommand=async(e,o)=>{let t=sharedHeaders("AdminInitiateAuth");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminLinkProviderForUserCommand=async(e,o)=>{let t=sharedHeaders("AdminLinkProviderForUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminListDevicesCommand=async(e,o)=>{let t=sharedHeaders("AdminListDevices");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminListGroupsForUserCommand=async(e,o)=>{let t=sharedHeaders("AdminListGroupsForUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminListUserAuthEventsCommand=async(e,o)=>{let t=sharedHeaders("AdminListUserAuthEvents");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminRemoveUserFromGroupCommand=async(e,o)=>{let t=sharedHeaders("AdminRemoveUserFromGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminResetUserPasswordCommand=async(e,o)=>{let t=sharedHeaders("AdminResetUserPassword");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminRespondToAuthChallengeCommand=async(e,o)=>{let t=sharedHeaders("AdminRespondToAuthChallenge");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminSetUserMFAPreferenceCommand=async(e,o)=>{let t=sharedHeaders("AdminSetUserMFAPreference");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminSetUserPasswordCommand=async(e,o)=>{let t=sharedHeaders("AdminSetUserPassword");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminSetUserSettingsCommand=async(e,o)=>{let t=sharedHeaders("AdminSetUserSettings");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminUpdateAuthEventFeedbackCommand=async(e,o)=>{let t=sharedHeaders("AdminUpdateAuthEventFeedback");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminUpdateDeviceStatusCommand=async(e,o)=>{let t=sharedHeaders("AdminUpdateDeviceStatus");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminUpdateUserAttributesCommand=async(e,o)=>{let t=sharedHeaders("AdminUpdateUserAttributes");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AdminUserGlobalSignOutCommand=async(e,o)=>{let t=sharedHeaders("AdminUserGlobalSignOut");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_AssociateSoftwareTokenCommand=async(e,o)=>{let t=sharedHeaders("AssociateSoftwareToken");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ChangePasswordCommand=async(e,o)=>{let t=sharedHeaders("ChangePassword");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ConfirmDeviceCommand=async(e,o)=>{let t=sharedHeaders("ConfirmDevice");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ConfirmForgotPasswordCommand=async(e,o)=>{let t=sharedHeaders("ConfirmForgotPassword");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ConfirmSignUpCommand=async(e,o)=>{let t=sharedHeaders("ConfirmSignUp");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateGroupCommand=async(e,o)=>{let t=sharedHeaders("CreateGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateIdentityProviderCommand=async(e,o)=>{let t=sharedHeaders("CreateIdentityProvider");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateResourceServerCommand=async(e,o)=>{let t=sharedHeaders("CreateResourceServer");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateUserImportJobCommand=async(e,o)=>{let t=sharedHeaders("CreateUserImportJob");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateUserPoolCommand=async(e,o)=>{let t=sharedHeaders("CreateUserPool");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateUserPoolClientCommand=async(e,o)=>{let t=sharedHeaders("CreateUserPoolClient");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_CreateUserPoolDomainCommand=async(e,o)=>{let t=sharedHeaders("CreateUserPoolDomain");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteGroupCommand=async(e,o)=>{let t=sharedHeaders("DeleteGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteIdentityProviderCommand=async(e,o)=>{let t=sharedHeaders("DeleteIdentityProvider");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteResourceServerCommand=async(e,o)=>{let t=sharedHeaders("DeleteResourceServer");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteUserCommand=async(e,o)=>{let t=sharedHeaders("DeleteUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteUserAttributesCommand=async(e,o)=>{let t=sharedHeaders("DeleteUserAttributes");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteUserPoolCommand=async(e,o)=>{let t=sharedHeaders("DeleteUserPool");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteUserPoolClientCommand=async(e,o)=>{let t=sharedHeaders("DeleteUserPoolClient");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DeleteUserPoolDomainCommand=async(e,o)=>{let t=sharedHeaders("DeleteUserPoolDomain");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeIdentityProviderCommand=async(e,o)=>{let t=sharedHeaders("DescribeIdentityProvider");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeResourceServerCommand=async(e,o)=>{let t=sharedHeaders("DescribeResourceServer");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeRiskConfigurationCommand=async(e,o)=>{let t=sharedHeaders("DescribeRiskConfiguration");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeUserImportJobCommand=async(e,o)=>{let t=sharedHeaders("DescribeUserImportJob");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeUserPoolCommand=async(e,o)=>{let t=sharedHeaders("DescribeUserPool");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeUserPoolClientCommand=async(e,o)=>{let t=sharedHeaders("DescribeUserPoolClient");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_DescribeUserPoolDomainCommand=async(e,o)=>{let t=sharedHeaders("DescribeUserPoolDomain");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ForgetDeviceCommand=async(e,o)=>{let t=sharedHeaders("ForgetDevice");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ForgotPasswordCommand=async(e,o)=>{let t=sharedHeaders("ForgotPassword");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetCSVHeaderCommand=async(e,o)=>{let t=sharedHeaders("GetCSVHeader");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetDeviceCommand=async(e,o)=>{let t=sharedHeaders("GetDevice");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetGroupCommand=async(e,o)=>{let t=sharedHeaders("GetGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetIdentityProviderByIdentifierCommand=async(e,o)=>{let t=sharedHeaders("GetIdentityProviderByIdentifier");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetSigningCertificateCommand=async(e,o)=>{let t=sharedHeaders("GetSigningCertificate");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetUICustomizationCommand=async(e,o)=>{let t=sharedHeaders("GetUICustomization");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetUserCommand=async(e,o)=>{let t=sharedHeaders("GetUser");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetUserAttributeVerificationCodeCommand=async(e,o)=>{let t=sharedHeaders("GetUserAttributeVerificationCode");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GetUserPoolMfaConfigCommand=async(e,o)=>{let t=sharedHeaders("GetUserPoolMfaConfig");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_GlobalSignOutCommand=async(e,o)=>{let t=sharedHeaders("GlobalSignOut");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_InitiateAuthCommand=async(e,o)=>{let t=sharedHeaders("InitiateAuth");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListDevicesCommand=async(e,o)=>{let t=sharedHeaders("ListDevices");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListGroupsCommand=async(e,o)=>{let t=sharedHeaders("ListGroups");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListIdentityProvidersCommand=async(e,o)=>{let t=sharedHeaders("ListIdentityProviders");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListResourceServersCommand=async(e,o)=>{let t=sharedHeaders("ListResourceServers");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListTagsForResourceCommand=async(e,o)=>{let t=sharedHeaders("ListTagsForResource");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListUserImportJobsCommand=async(e,o)=>{let t=sharedHeaders("ListUserImportJobs");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListUserPoolClientsCommand=async(e,o)=>{let t=sharedHeaders("ListUserPoolClients");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListUserPoolsCommand=async(e,o)=>{let t=sharedHeaders("ListUserPools");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListUsersCommand=async(e,o)=>{let t=sharedHeaders("ListUsers");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ListUsersInGroupCommand=async(e,o)=>{let t=sharedHeaders("ListUsersInGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_ResendConfirmationCodeCommand=async(e,o)=>{let t=sharedHeaders("ResendConfirmationCode");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_RespondToAuthChallengeCommand=async(e,o)=>{let t=sharedHeaders("RespondToAuthChallenge");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_RevokeTokenCommand=async(e,o)=>{let t=sharedHeaders("RevokeToken");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_SetRiskConfigurationCommand=async(e,o)=>{let t=sharedHeaders("SetRiskConfiguration");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_SetUICustomizationCommand=async(e,o)=>{let t;let a=sharedHeaders("SetUICustomization");return t=JSON.stringify(se_SetUICustomizationRequest(e,o)),buildHttpRpcRequest(o,a,"/",void 0,t)},se_SetUserMFAPreferenceCommand=async(e,o)=>{let t=sharedHeaders("SetUserMFAPreference");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_SetUserPoolMfaConfigCommand=async(e,o)=>{let t=sharedHeaders("SetUserPoolMfaConfig");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_SetUserSettingsCommand=async(e,o)=>{let t=sharedHeaders("SetUserSettings");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_SignUpCommand=async(e,o)=>{let t=sharedHeaders("SignUp");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_StartUserImportJobCommand=async(e,o)=>{let t=sharedHeaders("StartUserImportJob");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_StopUserImportJobCommand=async(e,o)=>{let t=sharedHeaders("StopUserImportJob");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_TagResourceCommand=async(e,o)=>{let t=sharedHeaders("TagResource");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UntagResourceCommand=async(e,o)=>{let t=sharedHeaders("UntagResource");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateAuthEventFeedbackCommand=async(e,o)=>{let t=sharedHeaders("UpdateAuthEventFeedback");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateDeviceStatusCommand=async(e,o)=>{let t=sharedHeaders("UpdateDeviceStatus");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateGroupCommand=async(e,o)=>{let t=sharedHeaders("UpdateGroup");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateIdentityProviderCommand=async(e,o)=>{let t=sharedHeaders("UpdateIdentityProvider");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateResourceServerCommand=async(e,o)=>{let t=sharedHeaders("UpdateResourceServer");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateUserAttributesCommand=async(e,o)=>{let t=sharedHeaders("UpdateUserAttributes");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateUserPoolCommand=async(e,o)=>{let t=sharedHeaders("UpdateUserPool");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateUserPoolClientCommand=async(e,o)=>{let t=sharedHeaders("UpdateUserPoolClient");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_UpdateUserPoolDomainCommand=async(e,o)=>{let t=sharedHeaders("UpdateUserPoolDomain");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_VerifySoftwareTokenCommand=async(e,o)=>{let t=sharedHeaders("VerifySoftwareToken");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},se_VerifyUserAttributeCommand=async(e,o)=>{let t=sharedHeaders("VerifyUserAttribute");return buildHttpRpcRequest(o,t,"/",void 0,JSON.stringify((0,i.F3)(e)))},de_AddCustomAttributesCommand=async(e,o)=>{if(e.statusCode>=300)return de_AddCustomAttributesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AddCustomAttributesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserImportInProgressException":case"com.amazonaws.cognitoidentityprovider#UserImportInProgressException":throw await de_UserImportInProgressExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminAddUserToGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminAddUserToGroupCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_AdminAddUserToGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminConfirmSignUpCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminConfirmSignUpCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminConfirmSignUpCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyFailedAttemptsException":case"com.amazonaws.cognitoidentityprovider#TooManyFailedAttemptsException":throw await de_TooManyFailedAttemptsExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminCreateUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminCreateUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminCreateUserResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminCreateUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PreconditionNotMetException":case"com.amazonaws.cognitoidentityprovider#PreconditionNotMetException":throw await de_PreconditionNotMetExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UnsupportedUserStateException":case"com.amazonaws.cognitoidentityprovider#UnsupportedUserStateException":throw await de_UnsupportedUserStateExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);case"UsernameExistsException":case"com.amazonaws.cognitoidentityprovider#UsernameExistsException":throw await de_UsernameExistsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminDeleteUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminDeleteUserCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_AdminDeleteUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminDeleteUserAttributesCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminDeleteUserAttributesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminDeleteUserAttributesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminDisableProviderForUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminDisableProviderForUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminDisableProviderForUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminDisableUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminDisableUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminDisableUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminEnableUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminEnableUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminEnableUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminForgetDeviceCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminForgetDeviceCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_AdminForgetDeviceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminGetDeviceCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminGetDeviceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminGetDeviceResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminGetDeviceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminGetUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminGetUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminGetUserResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminGetUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminInitiateAuthCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminInitiateAuthCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminInitiateAuthCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"MFAMethodNotFoundException":case"com.amazonaws.cognitoidentityprovider#MFAMethodNotFoundException":throw await de_MFAMethodNotFoundExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminLinkProviderForUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminLinkProviderForUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminLinkProviderForUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminListDevicesCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminListDevicesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminListDevicesResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminListDevicesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminListGroupsForUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminListGroupsForUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminListGroupsForUserResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminListGroupsForUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminListUserAuthEventsCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminListUserAuthEventsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_AdminListUserAuthEventsResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_AdminListUserAuthEventsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);case"UserPoolAddOnNotEnabledException":case"com.amazonaws.cognitoidentityprovider#UserPoolAddOnNotEnabledException":throw await de_UserPoolAddOnNotEnabledExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminRemoveUserFromGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminRemoveUserFromGroupCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_AdminRemoveUserFromGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminResetUserPasswordCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminResetUserPasswordCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminResetUserPasswordCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminRespondToAuthChallengeCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminRespondToAuthChallengeCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminRespondToAuthChallengeCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"MFAMethodNotFoundException":case"com.amazonaws.cognitoidentityprovider#MFAMethodNotFoundException":throw await de_MFAMethodNotFoundExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"SoftwareTokenMFANotFoundException":case"com.amazonaws.cognitoidentityprovider#SoftwareTokenMFANotFoundException":throw await de_SoftwareTokenMFANotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminSetUserMFAPreferenceCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminSetUserMFAPreferenceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminSetUserMFAPreferenceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminSetUserPasswordCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminSetUserPasswordCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminSetUserPasswordCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminSetUserSettingsCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminSetUserSettingsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminSetUserSettingsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminUpdateAuthEventFeedbackCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminUpdateAuthEventFeedbackCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminUpdateAuthEventFeedbackCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);case"UserPoolAddOnNotEnabledException":case"com.amazonaws.cognitoidentityprovider#UserPoolAddOnNotEnabledException":throw await de_UserPoolAddOnNotEnabledExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminUpdateDeviceStatusCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminUpdateDeviceStatusCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminUpdateDeviceStatusCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminUpdateUserAttributesCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminUpdateUserAttributesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminUpdateUserAttributesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AdminUserGlobalSignOutCommand=async(e,o)=>{if(e.statusCode>=300)return de_AdminUserGlobalSignOutCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AdminUserGlobalSignOutCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AssociateSoftwareTokenCommand=async(e,o)=>{if(e.statusCode>=300)return de_AssociateSoftwareTokenCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_AssociateSoftwareTokenCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"SoftwareTokenMFANotFoundException":case"com.amazonaws.cognitoidentityprovider#SoftwareTokenMFANotFoundException":throw await de_SoftwareTokenMFANotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ChangePasswordCommand=async(e,o)=>{if(e.statusCode>=300)return de_ChangePasswordCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ChangePasswordCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ConfirmDeviceCommand=async(e,o)=>{if(e.statusCode>=300)return de_ConfirmDeviceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ConfirmDeviceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);case"UsernameExistsException":case"com.amazonaws.cognitoidentityprovider#UsernameExistsException":throw await de_UsernameExistsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ConfirmForgotPasswordCommand=async(e,o)=>{if(e.statusCode>=300)return de_ConfirmForgotPasswordCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ConfirmForgotPasswordCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyFailedAttemptsException":case"com.amazonaws.cognitoidentityprovider#TooManyFailedAttemptsException":throw await de_TooManyFailedAttemptsExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ConfirmSignUpCommand=async(e,o)=>{if(e.statusCode>=300)return de_ConfirmSignUpCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ConfirmSignUpCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyFailedAttemptsException":case"com.amazonaws.cognitoidentityprovider#TooManyFailedAttemptsException":throw await de_TooManyFailedAttemptsExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateGroupCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_CreateGroupResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_CreateGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"GroupExistsException":case"com.amazonaws.cognitoidentityprovider#GroupExistsException":throw await de_GroupExistsExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateIdentityProviderCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateIdentityProviderCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_CreateIdentityProviderResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_CreateIdentityProviderCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"DuplicateProviderException":case"com.amazonaws.cognitoidentityprovider#DuplicateProviderException":throw await de_DuplicateProviderExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateResourceServerCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateResourceServerCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_CreateResourceServerCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateUserImportJobCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateUserImportJobCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_CreateUserImportJobResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_CreateUserImportJobCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PreconditionNotMetException":case"com.amazonaws.cognitoidentityprovider#PreconditionNotMetException":throw await de_PreconditionNotMetExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateUserPoolCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateUserPoolCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_CreateUserPoolResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_CreateUserPoolCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserPoolTaggingException":case"com.amazonaws.cognitoidentityprovider#UserPoolTaggingException":throw await de_UserPoolTaggingExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateUserPoolClientCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateUserPoolClientCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_CreateUserPoolClientResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_CreateUserPoolClientCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidOAuthFlowException":case"com.amazonaws.cognitoidentityprovider#InvalidOAuthFlowException":throw await de_InvalidOAuthFlowExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"ScopeDoesNotExistException":case"com.amazonaws.cognitoidentityprovider#ScopeDoesNotExistException":throw await de_ScopeDoesNotExistExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_CreateUserPoolDomainCommand=async(e,o)=>{if(e.statusCode>=300)return de_CreateUserPoolDomainCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_CreateUserPoolDomainCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteGroupCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteIdentityProviderCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteIdentityProviderCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteIdentityProviderCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnsupportedIdentityProviderException":case"com.amazonaws.cognitoidentityprovider#UnsupportedIdentityProviderException":throw await de_UnsupportedIdentityProviderExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteResourceServerCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteResourceServerCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteResourceServerCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteUserCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteUserAttributesCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteUserAttributesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_DeleteUserAttributesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteUserPoolCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteUserPoolCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteUserPoolCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserImportInProgressException":case"com.amazonaws.cognitoidentityprovider#UserImportInProgressException":throw await de_UserImportInProgressExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteUserPoolClientCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteUserPoolClientCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_DeleteUserPoolClientCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DeleteUserPoolDomainCommand=async(e,o)=>{if(e.statusCode>=300)return de_DeleteUserPoolDomainCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_DeleteUserPoolDomainCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeIdentityProviderCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeIdentityProviderCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_DescribeIdentityProviderResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_DescribeIdentityProviderCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeResourceServerCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeResourceServerCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_DescribeResourceServerCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeRiskConfigurationCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeRiskConfigurationCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_DescribeRiskConfigurationResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_DescribeRiskConfigurationCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserPoolAddOnNotEnabledException":case"com.amazonaws.cognitoidentityprovider#UserPoolAddOnNotEnabledException":throw await de_UserPoolAddOnNotEnabledExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeUserImportJobCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeUserImportJobCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_DescribeUserImportJobResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_DescribeUserImportJobCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeUserPoolCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeUserPoolCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_DescribeUserPoolResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_DescribeUserPoolCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserPoolTaggingException":case"com.amazonaws.cognitoidentityprovider#UserPoolTaggingException":throw await de_UserPoolTaggingExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeUserPoolClientCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeUserPoolClientCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_DescribeUserPoolClientResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_DescribeUserPoolClientCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_DescribeUserPoolDomainCommand=async(e,o)=>{if(e.statusCode>=300)return de_DescribeUserPoolDomainCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_DescribeUserPoolDomainCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ForgetDeviceCommand=async(e,o)=>{if(e.statusCode>=300)return de_ForgetDeviceCommandError(e,o);await (0,i.Wg)(e.body,o);let t={$metadata:deserializeMetadata(e)};return t},de_ForgetDeviceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ForgotPasswordCommand=async(e,o)=>{if(e.statusCode>=300)return de_ForgotPasswordCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ForgotPasswordCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetCSVHeaderCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetCSVHeaderCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GetCSVHeaderCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetDeviceCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetDeviceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_GetDeviceResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_GetDeviceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetGroupCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_GetGroupResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_GetGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetIdentityProviderByIdentifierCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetIdentityProviderByIdentifierCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_GetIdentityProviderByIdentifierResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_GetIdentityProviderByIdentifierCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetSigningCertificateCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetSigningCertificateCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GetSigningCertificateCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetUICustomizationCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetUICustomizationCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_GetUICustomizationResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_GetUICustomizationCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetUserCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetUserCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GetUserCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetUserAttributeVerificationCodeCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetUserAttributeVerificationCodeCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GetUserAttributeVerificationCodeCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GetUserPoolMfaConfigCommand=async(e,o)=>{if(e.statusCode>=300)return de_GetUserPoolMfaConfigCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GetUserPoolMfaConfigCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_GlobalSignOutCommand=async(e,o)=>{if(e.statusCode>=300)return de_GlobalSignOutCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_GlobalSignOutCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_InitiateAuthCommand=async(e,o)=>{if(e.statusCode>=300)return de_InitiateAuthCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_InitiateAuthCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListDevicesCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListDevicesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListDevicesResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListDevicesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListGroupsCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListGroupsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListGroupsResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListGroupsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListIdentityProvidersCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListIdentityProvidersCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListIdentityProvidersResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListIdentityProvidersCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListResourceServersCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListResourceServersCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ListResourceServersCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListTagsForResourceCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListTagsForResourceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ListTagsForResourceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListUserImportJobsCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListUserImportJobsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListUserImportJobsResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListUserImportJobsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListUserPoolClientsCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListUserPoolClientsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ListUserPoolClientsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListUserPoolsCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListUserPoolsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListUserPoolsResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListUserPoolsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListUsersCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListUsersCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListUsersResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListUsersCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ListUsersInGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_ListUsersInGroupCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_ListUsersInGroupResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_ListUsersInGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_ResendConfirmationCodeCommand=async(e,o)=>{if(e.statusCode>=300)return de_ResendConfirmationCodeCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_ResendConfirmationCodeCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_RespondToAuthChallengeCommand=async(e,o)=>{if(e.statusCode>=300)return de_RespondToAuthChallengeCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_RespondToAuthChallengeCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"MFAMethodNotFoundException":case"com.amazonaws.cognitoidentityprovider#MFAMethodNotFoundException":throw await de_MFAMethodNotFoundExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"SoftwareTokenMFANotFoundException":case"com.amazonaws.cognitoidentityprovider#SoftwareTokenMFANotFoundException":throw await de_SoftwareTokenMFANotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_RevokeTokenCommand=async(e,o)=>{if(e.statusCode>=300)return de_RevokeTokenCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_RevokeTokenCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnauthorizedException":case"com.amazonaws.cognitoidentityprovider#UnauthorizedException":throw await de_UnauthorizedExceptionRes(t,o);case"UnsupportedOperationException":case"com.amazonaws.cognitoidentityprovider#UnsupportedOperationException":throw await de_UnsupportedOperationExceptionRes(t,o);case"UnsupportedTokenTypeException":case"com.amazonaws.cognitoidentityprovider#UnsupportedTokenTypeException":throw await de_UnsupportedTokenTypeExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SetRiskConfigurationCommand=async(e,o)=>{if(e.statusCode>=300)return de_SetRiskConfigurationCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_SetRiskConfigurationResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_SetRiskConfigurationCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserPoolAddOnNotEnabledException":case"com.amazonaws.cognitoidentityprovider#UserPoolAddOnNotEnabledException":throw await de_UserPoolAddOnNotEnabledExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SetUICustomizationCommand=async(e,o)=>{if(e.statusCode>=300)return de_SetUICustomizationCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_SetUICustomizationResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_SetUICustomizationCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SetUserMFAPreferenceCommand=async(e,o)=>{if(e.statusCode>=300)return de_SetUserMFAPreferenceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_SetUserMFAPreferenceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SetUserPoolMfaConfigCommand=async(e,o)=>{if(e.statusCode>=300)return de_SetUserPoolMfaConfigCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_SetUserPoolMfaConfigCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SetUserSettingsCommand=async(e,o)=>{if(e.statusCode>=300)return de_SetUserSettingsCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_SetUserSettingsCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_SignUpCommand=async(e,o)=>{if(e.statusCode>=300)return de_SignUpCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_SignUpCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidPasswordException":case"com.amazonaws.cognitoidentityprovider#InvalidPasswordException":throw await de_InvalidPasswordExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UsernameExistsException":case"com.amazonaws.cognitoidentityprovider#UsernameExistsException":throw await de_UsernameExistsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_StartUserImportJobCommand=async(e,o)=>{if(e.statusCode>=300)return de_StartUserImportJobCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_StartUserImportJobResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_StartUserImportJobCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PreconditionNotMetException":case"com.amazonaws.cognitoidentityprovider#PreconditionNotMetException":throw await de_PreconditionNotMetExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_StopUserImportJobCommand=async(e,o)=>{if(e.statusCode>=300)return de_StopUserImportJobCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_StopUserImportJobResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_StopUserImportJobCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PreconditionNotMetException":case"com.amazonaws.cognitoidentityprovider#PreconditionNotMetException":throw await de_PreconditionNotMetExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_TagResourceCommand=async(e,o)=>{if(e.statusCode>=300)return de_TagResourceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_TagResourceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UntagResourceCommand=async(e,o)=>{if(e.statusCode>=300)return de_UntagResourceCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UntagResourceCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateAuthEventFeedbackCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateAuthEventFeedbackCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateAuthEventFeedbackCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);case"UserPoolAddOnNotEnabledException":case"com.amazonaws.cognitoidentityprovider#UserPoolAddOnNotEnabledException":throw await de_UserPoolAddOnNotEnabledExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateDeviceStatusCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateDeviceStatusCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateDeviceStatusCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateGroupCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateGroupCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_UpdateGroupResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_UpdateGroupCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateIdentityProviderCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateIdentityProviderCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_UpdateIdentityProviderResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_UpdateIdentityProviderCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnsupportedIdentityProviderException":case"com.amazonaws.cognitoidentityprovider#UnsupportedIdentityProviderException":throw await de_UnsupportedIdentityProviderExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateResourceServerCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateResourceServerCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateResourceServerCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateUserAttributesCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateUserAttributesCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateUserAttributesCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"CodeDeliveryFailureException":case"com.amazonaws.cognitoidentityprovider#CodeDeliveryFailureException":throw await de_CodeDeliveryFailureExceptionRes(t,o);case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidLambdaResponseException":case"com.amazonaws.cognitoidentityprovider#InvalidLambdaResponseException":throw await de_InvalidLambdaResponseExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UnexpectedLambdaException":case"com.amazonaws.cognitoidentityprovider#UnexpectedLambdaException":throw await de_UnexpectedLambdaExceptionRes(t,o);case"UserLambdaValidationException":case"com.amazonaws.cognitoidentityprovider#UserLambdaValidationException":throw await de_UserLambdaValidationExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateUserPoolCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateUserPoolCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateUserPoolCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidEmailRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidEmailRoleAccessPolicyException":throw await de_InvalidEmailRoleAccessPolicyExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidSmsRoleAccessPolicyException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleAccessPolicyException":throw await de_InvalidSmsRoleAccessPolicyExceptionRes(t,o);case"InvalidSmsRoleTrustRelationshipException":case"com.amazonaws.cognitoidentityprovider#InvalidSmsRoleTrustRelationshipException":throw await de_InvalidSmsRoleTrustRelationshipExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserImportInProgressException":case"com.amazonaws.cognitoidentityprovider#UserImportInProgressException":throw await de_UserImportInProgressExceptionRes(t,o);case"UserPoolTaggingException":case"com.amazonaws.cognitoidentityprovider#UserPoolTaggingException":throw await de_UserPoolTaggingExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateUserPoolClientCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateUserPoolClientCommandError(e,o);let t=await parseBody(e.body,o),a={};a=de_UpdateUserPoolClientResponse(t,o);let i={$metadata:deserializeMetadata(e),...a};return i},de_UpdateUserPoolClientCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"ConcurrentModificationException":case"com.amazonaws.cognitoidentityprovider#ConcurrentModificationException":throw await de_ConcurrentModificationExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidOAuthFlowException":case"com.amazonaws.cognitoidentityprovider#InvalidOAuthFlowException":throw await de_InvalidOAuthFlowExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"ScopeDoesNotExistException":case"com.amazonaws.cognitoidentityprovider#ScopeDoesNotExistException":throw await de_ScopeDoesNotExistExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_UpdateUserPoolDomainCommand=async(e,o)=>{if(e.statusCode>=300)return de_UpdateUserPoolDomainCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_UpdateUserPoolDomainCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_VerifySoftwareTokenCommand=async(e,o)=>{if(e.statusCode>=300)return de_VerifySoftwareTokenCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_VerifySoftwareTokenCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"EnableSoftwareTokenMFAException":case"com.amazonaws.cognitoidentityprovider#EnableSoftwareTokenMFAException":throw await de_EnableSoftwareTokenMFAExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"InvalidUserPoolConfigurationException":case"com.amazonaws.cognitoidentityprovider#InvalidUserPoolConfigurationException":throw await de_InvalidUserPoolConfigurationExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"SoftwareTokenMFANotFoundException":case"com.amazonaws.cognitoidentityprovider#SoftwareTokenMFANotFoundException":throw await de_SoftwareTokenMFANotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_VerifyUserAttributeCommand=async(e,o)=>{if(e.statusCode>=300)return de_VerifyUserAttributeCommandError(e,o);let t=await parseBody(e.body,o),a={};a=(0,i.F3)(t);let n={$metadata:deserializeMetadata(e),...a};return n},de_VerifyUserAttributeCommandError=async(e,o)=>{let t={...e,body:await parseErrorBody(e.body,o)},a=loadRestJsonErrorCode(e,t.body);switch(a){case"AliasExistsException":case"com.amazonaws.cognitoidentityprovider#AliasExistsException":throw await de_AliasExistsExceptionRes(t,o);case"CodeMismatchException":case"com.amazonaws.cognitoidentityprovider#CodeMismatchException":throw await de_CodeMismatchExceptionRes(t,o);case"ExpiredCodeException":case"com.amazonaws.cognitoidentityprovider#ExpiredCodeException":throw await de_ExpiredCodeExceptionRes(t,o);case"ForbiddenException":case"com.amazonaws.cognitoidentityprovider#ForbiddenException":throw await de_ForbiddenExceptionRes(t,o);case"InternalErrorException":case"com.amazonaws.cognitoidentityprovider#InternalErrorException":throw await de_InternalErrorExceptionRes(t,o);case"InvalidParameterException":case"com.amazonaws.cognitoidentityprovider#InvalidParameterException":throw await de_InvalidParameterExceptionRes(t,o);case"LimitExceededException":case"com.amazonaws.cognitoidentityprovider#LimitExceededException":throw await de_LimitExceededExceptionRes(t,o);case"NotAuthorizedException":case"com.amazonaws.cognitoidentityprovider#NotAuthorizedException":throw await de_NotAuthorizedExceptionRes(t,o);case"PasswordResetRequiredException":case"com.amazonaws.cognitoidentityprovider#PasswordResetRequiredException":throw await de_PasswordResetRequiredExceptionRes(t,o);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentityprovider#ResourceNotFoundException":throw await de_ResourceNotFoundExceptionRes(t,o);case"TooManyRequestsException":case"com.amazonaws.cognitoidentityprovider#TooManyRequestsException":throw await de_TooManyRequestsExceptionRes(t,o);case"UserNotConfirmedException":case"com.amazonaws.cognitoidentityprovider#UserNotConfirmedException":throw await de_UserNotConfirmedExceptionRes(t,o);case"UserNotFoundException":case"com.amazonaws.cognitoidentityprovider#UserNotFoundException":throw await de_UserNotFoundExceptionRes(t,o);default:let i=t.body;return s({output:e,parsedBody:i,errorCode:a})}},de_AliasExistsExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.vd({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_CodeDeliveryFailureExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.ZF({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_CodeMismatchExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.fi({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_ConcurrentModificationExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.qJ({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_DuplicateProviderExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Hf({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_EnableSoftwareTokenMFAExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new d.P4({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_ExpiredCodeExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.uA({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_ForbiddenExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.V2({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_GroupExistsExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.dy({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InternalErrorExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Bj({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidEmailRoleAccessPolicyExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.ec({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidLambdaResponseExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.i({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidOAuthFlowExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.ks({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidParameterExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.L7({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidPasswordExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.bp({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidSmsRoleAccessPolicyExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.V0({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidSmsRoleTrustRelationshipExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.ck({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_InvalidUserPoolConfigurationExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.su({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_LimitExceededExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.ss({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_MFAMethodNotFoundExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.iH({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_NotAuthorizedExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Sy({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_PasswordResetRequiredExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.qq({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_PreconditionNotMetExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.OF({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_ResourceNotFoundExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.P$({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_ScopeDoesNotExistExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.W5({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_SoftwareTokenMFANotFoundExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.pn({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_TooManyFailedAttemptsExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.pe({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_TooManyRequestsExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.wT({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnauthorizedExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.GT({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnexpectedLambdaExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.io({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnsupportedIdentityProviderExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.fx({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnsupportedOperationExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.sR({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnsupportedTokenTypeExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.cu({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UnsupportedUserStateExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Ph({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserImportInProgressExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.h6({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserLambdaValidationExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Rv({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UsernameExistsExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Fm({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserNotConfirmedExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Cy({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserNotFoundExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.Rg({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserPoolAddOnNotEnabledExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.mW({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},de_UserPoolTaggingExceptionRes=async(e,o)=>{let t=e.body,a=(0,i.F3)(t),n=new r.K6({$metadata:deserializeMetadata(e),...a});return(0,i.to)(n,t)},se_SetUICustomizationRequest=(e,o)=>(0,i.qn)(e,{CSS:[],ClientId:[],ImageFile:o.base64Encoder,UserPoolId:[]}),de_AdminCreateUserResponse=(e,o)=>(0,i.qn)(e,{User:e=>de_UserType(e,o)}),de_AdminGetDeviceResponse=(e,o)=>(0,i.qn)(e,{Device:e=>de_DeviceType(e,o)}),de_AdminGetUserResponse=(e,o)=>(0,i.qn)(e,{Enabled:i.zE,MFAOptions:i.F3,PreferredMfaSetting:i.pY,UserAttributes:i.F3,UserCreateDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),UserLastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),UserMFASettingList:i.F3,UserStatus:i.pY,Username:i.pY}),de_AdminListDevicesResponse=(e,o)=>(0,i.qn)(e,{Devices:e=>de_DeviceListType(e,o),PaginationToken:i.pY}),de_AdminListGroupsForUserResponse=(e,o)=>(0,i.qn)(e,{Groups:e=>de_GroupListType(e,o),NextToken:i.pY}),de_AdminListUserAuthEventsResponse=(e,o)=>(0,i.qn)(e,{AuthEvents:e=>de_AuthEventsType(e,o),NextToken:i.pY}),de_AuthEventsType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_AuthEventType(e,o));return t},de_AuthEventType=(e,o)=>(0,i.qn)(e,{ChallengeResponses:i.F3,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),EventContextData:i.F3,EventFeedback:e=>de_EventFeedbackType(e,o),EventId:i.pY,EventResponse:i.pY,EventRisk:i.F3,EventType:i.pY}),de_CreateGroupResponse=(e,o)=>(0,i.qn)(e,{Group:e=>de_GroupType(e,o)}),de_CreateIdentityProviderResponse=(e,o)=>(0,i.qn)(e,{IdentityProvider:e=>de_IdentityProviderType(e,o)}),de_CreateUserImportJobResponse=(e,o)=>(0,i.qn)(e,{UserImportJob:e=>de_UserImportJobType(e,o)}),de_CreateUserPoolClientResponse=(e,o)=>(0,i.qn)(e,{UserPoolClient:e=>de_UserPoolClientType(e,o)}),de_CreateUserPoolResponse=(e,o)=>(0,i.qn)(e,{UserPool:e=>de_UserPoolType(e,o)}),de_DescribeIdentityProviderResponse=(e,o)=>(0,i.qn)(e,{IdentityProvider:e=>de_IdentityProviderType(e,o)}),de_DescribeRiskConfigurationResponse=(e,o)=>(0,i.qn)(e,{RiskConfiguration:e=>de_RiskConfigurationType(e,o)}),de_DescribeUserImportJobResponse=(e,o)=>(0,i.qn)(e,{UserImportJob:e=>de_UserImportJobType(e,o)}),de_DescribeUserPoolClientResponse=(e,o)=>(0,i.qn)(e,{UserPoolClient:e=>de_UserPoolClientType(e,o)}),de_DescribeUserPoolResponse=(e,o)=>(0,i.qn)(e,{UserPool:e=>de_UserPoolType(e,o)}),de_DeviceListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_DeviceType(e,o));return t},de_DeviceType=(e,o)=>(0,i.qn)(e,{DeviceAttributes:i.F3,DeviceCreateDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),DeviceKey:i.pY,DeviceLastAuthenticatedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),DeviceLastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e)))}),de_EventFeedbackType=(e,o)=>(0,i.qn)(e,{FeedbackDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),FeedbackValue:i.pY,Provider:i.pY}),de_GetDeviceResponse=(e,o)=>(0,i.qn)(e,{Device:e=>de_DeviceType(e,o)}),de_GetGroupResponse=(e,o)=>(0,i.qn)(e,{Group:e=>de_GroupType(e,o)}),de_GetIdentityProviderByIdentifierResponse=(e,o)=>(0,i.qn)(e,{IdentityProvider:e=>de_IdentityProviderType(e,o)}),de_GetUICustomizationResponse=(e,o)=>(0,i.qn)(e,{UICustomization:e=>de_UICustomizationType(e,o)}),de_GroupListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_GroupType(e,o));return t},de_GroupType=(e,o)=>(0,i.qn)(e,{CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),Description:i.pY,GroupName:i.pY,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),Precedence:i.u$,RoleArn:i.pY,UserPoolId:i.pY}),de_IdentityProviderType=(e,o)=>(0,i.qn)(e,{AttributeMapping:i.F3,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),IdpIdentifiers:i.F3,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),ProviderDetails:i.F3,ProviderName:i.pY,ProviderType:i.pY,UserPoolId:i.pY}),de_ListDevicesResponse=(e,o)=>(0,i.qn)(e,{Devices:e=>de_DeviceListType(e,o),PaginationToken:i.pY}),de_ListGroupsResponse=(e,o)=>(0,i.qn)(e,{Groups:e=>de_GroupListType(e,o),NextToken:i.pY}),de_ListIdentityProvidersResponse=(e,o)=>(0,i.qn)(e,{NextToken:i.pY,Providers:e=>de_ProvidersListType(e,o)}),de_ListUserImportJobsResponse=(e,o)=>(0,i.qn)(e,{PaginationToken:i.pY,UserImportJobs:e=>de_UserImportJobsListType(e,o)}),de_ListUserPoolsResponse=(e,o)=>(0,i.qn)(e,{NextToken:i.pY,UserPools:e=>de_UserPoolListType(e,o)}),de_ListUsersInGroupResponse=(e,o)=>(0,i.qn)(e,{NextToken:i.pY,Users:e=>de_UsersListType(e,o)}),de_ListUsersResponse=(e,o)=>(0,i.qn)(e,{PaginationToken:i.pY,Users:e=>de_UsersListType(e,o)}),de_ProviderDescription=(e,o)=>(0,i.qn)(e,{CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),ProviderName:i.pY,ProviderType:i.pY}),de_ProvidersListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_ProviderDescription(e,o));return t},de_RiskConfigurationType=(e,o)=>(0,i.qn)(e,{AccountTakeoverRiskConfiguration:i.F3,ClientId:i.pY,CompromisedCredentialsRiskConfiguration:i.F3,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),RiskExceptionConfiguration:i.F3,UserPoolId:i.pY}),de_SetRiskConfigurationResponse=(e,o)=>(0,i.qn)(e,{RiskConfiguration:e=>de_RiskConfigurationType(e,o)}),de_SetUICustomizationResponse=(e,o)=>(0,i.qn)(e,{UICustomization:e=>de_UICustomizationType(e,o)}),de_StartUserImportJobResponse=(e,o)=>(0,i.qn)(e,{UserImportJob:e=>de_UserImportJobType(e,o)}),de_StopUserImportJobResponse=(e,o)=>(0,i.qn)(e,{UserImportJob:e=>de_UserImportJobType(e,o)}),de_UICustomizationType=(e,o)=>(0,i.qn)(e,{CSS:i.pY,CSSVersion:i.pY,ClientId:i.pY,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),ImageUrl:i.pY,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),UserPoolId:i.pY}),de_UpdateGroupResponse=(e,o)=>(0,i.qn)(e,{Group:e=>de_GroupType(e,o)}),de_UpdateIdentityProviderResponse=(e,o)=>(0,i.qn)(e,{IdentityProvider:e=>de_IdentityProviderType(e,o)}),de_UpdateUserPoolClientResponse=(e,o)=>(0,i.qn)(e,{UserPoolClient:e=>de_UserPoolClientType(e,o)}),de_UserImportJobsListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_UserImportJobType(e,o));return t},de_UserImportJobType=(e,o)=>(0,i.qn)(e,{CloudWatchLogsRoleArn:i.pY,CompletionDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),CompletionMessage:i.pY,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),FailedUsers:i.a_,ImportedUsers:i.a_,JobId:i.pY,JobName:i.pY,PreSignedUrl:i.pY,SkippedUsers:i.a_,StartDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),Status:i.pY,UserPoolId:i.pY}),de_UserPoolClientType=(e,o)=>(0,i.qn)(e,{AccessTokenValidity:i.u$,AllowedOAuthFlows:i.F3,AllowedOAuthFlowsUserPoolClient:i.zE,AllowedOAuthScopes:i.F3,AnalyticsConfiguration:i.F3,AuthSessionValidity:i.u$,CallbackURLs:i.F3,ClientId:i.pY,ClientName:i.pY,ClientSecret:i.pY,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),DefaultRedirectURI:i.pY,EnablePropagateAdditionalUserContextData:i.zE,EnableTokenRevocation:i.zE,ExplicitAuthFlows:i.F3,IdTokenValidity:i.u$,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),LogoutURLs:i.F3,PreventUserExistenceErrors:i.pY,ReadAttributes:i.F3,RefreshTokenValidity:i.u$,SupportedIdentityProviders:i.F3,TokenValidityUnits:i.F3,UserPoolId:i.pY,WriteAttributes:i.F3}),de_UserPoolDescriptionType=(e,o)=>(0,i.qn)(e,{CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),Id:i.pY,LambdaConfig:i.F3,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),Name:i.pY,Status:i.pY}),de_UserPoolListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_UserPoolDescriptionType(e,o));return t},de_UserPoolType=(e,o)=>(0,i.qn)(e,{AccountRecoverySetting:i.F3,AdminCreateUserConfig:i.F3,AliasAttributes:i.F3,Arn:i.pY,AutoVerifiedAttributes:i.F3,CreationDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),CustomDomain:i.pY,DeletionProtection:i.pY,DeviceConfiguration:i.F3,Domain:i.pY,EmailConfiguration:i.F3,EmailConfigurationFailure:i.pY,EmailVerificationMessage:i.pY,EmailVerificationSubject:i.pY,EstimatedNumberOfUsers:i.u$,Id:i.pY,LambdaConfig:i.F3,LastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),MfaConfiguration:i.pY,Name:i.pY,Policies:i.F3,SchemaAttributes:i.F3,SmsAuthenticationMessage:i.pY,SmsConfiguration:i.F3,SmsConfigurationFailure:i.pY,SmsVerificationMessage:i.pY,Status:i.pY,UserAttributeUpdateSettings:i.F3,UserPoolAddOns:i.F3,UserPoolTags:i.F3,UsernameAttributes:i.F3,UsernameConfiguration:i.F3,VerificationMessageTemplate:i.F3}),de_UsersListType=(e,o)=>{let t=(e||[]).filter(e=>null!=e).map(e=>de_UserType(e,o));return t},de_UserType=(e,o)=>(0,i.qn)(e,{Attributes:i.F3,Enabled:i.zE,MFAOptions:i.F3,UserCreateDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),UserLastModifiedDate:e=>(0,i.CE)((0,i.KX)((0,i.Fx)(e))),UserStatus:i.pY,Username:i.pY}),deserializeMetadata=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),collectBodyString=(e,o)=>(0,i.Wg)(e,o).then(e=>o.utf8Encoder(e)),s=(0,i.PC)(n.q),buildHttpRpcRequest=async(e,o,t,i,n)=>{let{hostname:r,protocol:d="https",port:s,path:c}=await e.endpoint(),p={protocol:d,hostname:r,port:s,method:"POST",path:c.endsWith("/")?c.slice(0,-1)+t:c+t,headers:o};return void 0!==i&&(p.hostname=i),void 0!==n&&(p.body=n),new a.aW(p)};function sharedHeaders(e){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityProviderService.${e}`}}let parseBody=(e,o)=>collectBodyString(e,o).then(e=>e.length?JSON.parse(e):{}),parseErrorBody=async(e,o)=>{let t=await parseBody(e,o);return t.message=t.message??t.Message,t},loadRestJsonErrorCode=(e,o)=>{let sanitizeErrorCode=e=>{let o=e;return"number"==typeof o&&(o=o.toString()),o.indexOf(",")>=0&&(o=o.split(",")[0]),o.indexOf(":")>=0&&(o=o.split(":")[0]),o.indexOf("#")>=0&&(o=o.split("#")[1]),o},t=Object.keys(e.headers).find(e=>"x-amzn-errortype"===e.toLowerCase());return void 0!==t?sanitizeErrorCode(e.headers[t]):void 0!==o.code?sanitizeErrorCode(o.code):void 0!==o.__type?sanitizeErrorCode(o.__type):void 0}}}]);